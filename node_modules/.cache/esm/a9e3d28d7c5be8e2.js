let Context,Validator,Registry,Observer;_7c5‍.w("../Context",[["default",["Context"],function(v){Context=v}]]);_7c5‍.w("../Validator",[["default",["Validator"],function(v){Validator=v}]]);_7c5‍.w("../Registry",[["default",["Registry"],function(v){Registry=v}]]);_7c5‍.w("../Observer",[["default",["Observer"],function(v){Observer=v}]]);




const ctx = new Context("Numbers", {
    state: {
        lastTimestamp: Date.now(),
        count: 0,
    },
    reducers: [
        (state) => ({
            lastTimestamp: Date.now(),
            count: state.count + 1,
        }),
    ]
});
const obs = new Observer(ctx, _7c5‍.g.console.log);

const val1 = new Validator(
    (state) => Date.now() > state.lastTimestamp - 50,
);

//! Unattached execution (<Context.state> is not natively passed to unattached executions)
ctx.attempt(val1, ctx.state);
ctx.attempt(val1, ctx.state);
ctx.attempt(val1, ctx.state);
ctx.attempt(val1, ctx.state);

//! Attached execution
ctx.attach(val1);
ctx.run();
ctx.run();
ctx.run();
ctx.run();