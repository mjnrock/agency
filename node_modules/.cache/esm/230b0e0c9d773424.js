let Proposition,Mutator,Context,Observer;_9d7‍.w("../Proposition",[["default",["Proposition"],function(v){Proposition=v}]]);_9d7‍.w("../Mutator",[["default",["Mutator"],function(v){Mutator=v}]]);_9d7‍.w("../Context",[["default",["Context"],function(v){Context=v}]]);_9d7‍.w("../Observer",[["default",["Observer"],function(v){Observer=v}]]);




const ctx = new Context({
    cats: 2,
}, [
    [
        state => ({
            ...state,
            _now: Date.now(),
        }),
        (...args) => {
            _9d7‍.g.console.log(`[PROPOSITION]`, ...args);

            return true;
        }
    ]
]);

const obs = new Observer(ctx, (...args) => _9d7‍.g.console.log(`[OBSERVER]`, ...args));

ctx.run(1, "fish");
_9d7‍.g.console.log(`[.]`, ctx.state);